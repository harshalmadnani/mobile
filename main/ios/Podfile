require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, '14.0'
install! 'cocoapods', :deterministic_uuids => false

def __apply_Xcode_14_3_RC_post_install_workaround(installer)
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      current_target = config.build_settings['IPHONEOS_DEPLOYMENT_TARGET']
      minimum_target = min_ios_version_supported
      if current_target.to_f < minimum_target.to_f
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = minimum_target
      end
    end
  end
end

target 'XadeMobile' do
  config = use_native_modules!
  use_frameworks! :linkage => :static
  $RNFirebaseAsStaticFramework = true
  # Flags change depending on the env values.
  flags = get_default_flags()

  # pod 'ParticleNetworkBase', '1.3.9'
  # pod 'ParticleAuthService', '1.3.9'
  # pod "Thresh", '1.3.4'
  # pod "ParticleMPCCore", '1.3.4'
  # pod "ParticleAuthCore", '1.3.4'
  # pod "AuthCoreAdapter", '1.3.4'
  # pod 'ParticleAA', '1.3.9'
  
    use_react_native!(
    :path => config[:reactNativePath],
    # Hermes is now enabled by default. Disable by setting this flag to false.
    # Upcoming versions of React Native may rely on get_default_flags(), but
    # we make it explicit here to aid in the React Native upgrade process.
    :hermes_enabled => false,
    :fabric_enabled => flags[:fabric_enabled],
    # Enables Flipper.
    #
    # Note that if you have use_frameworks! enabled, Flipper will not work and
    # you should disable the next line.
    #:flipper_configuration => FlipperConfiguration.enabled,
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  target 'XadeMobileTests' do
    inherit! :complete
    # Pods for testing
  end

  post_install do |installer|
    # BEGIN: Sentry CPP Exception fix
    sentry_cpp_exception_file = File.join(installer.sandbox.root, 'Sentry', 'Sources', 'SentryCrash', 'Recording', 'Monitors', 'SentryCrashMonitor_CPPException.cpp')
    if File.exist?(sentry_cpp_exception_file)
      # Use sed to modify the file in place. The -i '' option is for macOS compatibility.
      # 1. Add includes
      system("sed -i '' 's|#include <dlfcn.h>|#include <dlfcn.h>\\n#include <exception>\\n#include <pthread.h>|' #{sentry_cpp_exception_file}")
      # 2. Use __thread for g_stackCursor
      system("sed -i '' 's|static SentryCrashStackCursor g_stackCursor;|static __thread SentryCrashStackCursor g_stackCursor;|' #{sentry_cpp_exception_file}")
      # 3. Add catch for const char*
      system("sed -i '' 's|CATCH_VALUE(char \\\\*, s)|CATCH_VALUE(const char \\\\*, s)\\n        CATCH_VALUE(char \\\\*, s)|' #{sentry_cpp_exception_file}")
    end
    # END: Sentry CPP Exception fix

    # BEGIN: Sentry ucontext64_t fix
    sentry_machine_context_file = File.join(installer.sandbox.root, 'Sentry', 'Sources', 'SentryCrash', 'Recording', 'Tools', 'SentryCrashMachineContext.c')
    if File.exist?(sentry_machine_context_file)
      system("sed -i '' 's|#include \"SentryCrashMachineContext.h\"|#include \"SentryCrashMachineContext.h\"\\n#include <sys/_types/_ucontext64.h>|' #{sentry_machine_context_file}")
    end
    # END: Sentry ucontext64_t fix

    # BEGIN: Lottie deployment target fix
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        current_target = config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'].to_f
        if current_target < 13.0
          config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
        end
      end
    end
    # END: Lottie deployment target fix

    # BEGIN: Folly clockid_t fix
    folly_time_h = File.join(installer.sandbox.root, 'RCT-Folly', 'folly', 'portability', 'Time.h')
    if File.exist?(folly_time_h)
      system("sed -i '' 's|typedef uint8_t clockid_t;.*|// typedef uint8_t clockid_t;|' #{folly_time_h}")
    end
    # END: Folly clockid_t fix

    react_native_post_install(
      installer,
      # Set `mac_catalyst_enabled` to `true` in order to apply patches
      # ... existing code ...
    )
  end
end